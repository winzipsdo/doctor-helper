/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HeartRateIndexImport } from './routes/heart-rate/index'
import { Route as ApgarScoreIndexImport } from './routes/apgar-score/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const HomeIndexLazyImport = createFileRoute('/home/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const HomeIndexLazyRoute = HomeIndexLazyImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home/index.lazy').then((d) => d.Route))

const HeartRateIndexRoute = HeartRateIndexImport.update({
  id: '/heart-rate/',
  path: '/heart-rate/',
  getParentRoute: () => rootRoute,
} as any)

const ApgarScoreIndexRoute = ApgarScoreIndexImport.update({
  id: '/apgar-score/',
  path: '/apgar-score/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/apgar-score/': {
      id: '/apgar-score/'
      path: '/apgar-score'
      fullPath: '/apgar-score'
      preLoaderRoute: typeof ApgarScoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/heart-rate/': {
      id: '/heart-rate/'
      path: '/heart-rate'
      fullPath: '/heart-rate'
      preLoaderRoute: typeof HeartRateIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/apgar-score': typeof ApgarScoreIndexRoute
  '/heart-rate': typeof HeartRateIndexRoute
  '/home': typeof HomeIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/apgar-score': typeof ApgarScoreIndexRoute
  '/heart-rate': typeof HeartRateIndexRoute
  '/home': typeof HomeIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/apgar-score/': typeof ApgarScoreIndexRoute
  '/heart-rate/': typeof HeartRateIndexRoute
  '/home/': typeof HomeIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/apgar-score' | '/heart-rate' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/apgar-score' | '/heart-rate' | '/home'
  id: '__root__' | '/' | '/apgar-score/' | '/heart-rate/' | '/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ApgarScoreIndexRoute: typeof ApgarScoreIndexRoute
  HeartRateIndexRoute: typeof HeartRateIndexRoute
  HomeIndexLazyRoute: typeof HomeIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ApgarScoreIndexRoute: ApgarScoreIndexRoute,
  HeartRateIndexRoute: HeartRateIndexRoute,
  HomeIndexLazyRoute: HomeIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/apgar-score/",
        "/heart-rate/",
        "/home/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/apgar-score/": {
      "filePath": "apgar-score/index.tsx"
    },
    "/heart-rate/": {
      "filePath": "heart-rate/index.tsx"
    },
    "/home/": {
      "filePath": "home/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
